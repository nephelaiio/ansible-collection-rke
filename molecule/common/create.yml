---
- name: Spawn KVM guests
  hosts: localhost
  become: true
  pre_tasks:
    - name: Install disk utils
      ansible.builtin.apt:
        name:
          - parted
          - lvm2
  tasks:
    - debug:
        msg: "{{ molecule_yml.platforms }}"

    - fail:

    - name: Cache installer iso
      ansible.builtin.get_url:
        url: "{{ iso_installer.url }}"
        dest: "{{ iso_installer.dest | urlsplit('path') }}"

    - name: Create KVM guest disks
      ansible.builtin.command: "qemu-img create {{ guest_disk }} {{ guest_disk_size }}"
      args:
        creates: "{{ guest_disk }}"
      vars:
        guest_disk: "{{ cache_dir }}/{{ guest.installer_hostname }}.img"
        guest_disk_size: "{{ guest.installer_disk_size }}"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"

    - name: Manage permissions for KVM guest disks
      ansible.builtin.file:
        path: "{{ guest_disk }}"
        owner: libvirt-qemu
        group: kvm
        mode: 0666
      vars:
        guest_disk: "{{ cache_dir }}/{{ guest.installer_hostname }}.img"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"

    - name: Create KVM guest
      community.libvirt.virt:
        xml: "{{ xml_template }}"
        command: define
      vars:
        guest_hostname: "{{ guest.installer_hostname }}"
        guest_bridge: "{{ bridge_name }}"
        guest_iso: "{{ cache_dir }}/{{ guest_hostname }}.iso"
        guest_disk_path: "{{ cache_dir }}/{{ guest.installer_hostname }}.img"
        guest_mac: "{{ '52:54:00' | random_mac(seed=guest_hostname) }}"
        guest_disk_format: raw
        xml_template: "{{ lookup('template', 'vm.xml.j2') }}"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"

    - name: Start KVM guest
      community.libvirt.virt:
        name: "{{ guest_hostname }}"
        state: running
      vars:
        guest_hostname: "{{ guest.installer_hostname }}"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"

---
name: upgrade

on:
  pull_request:
    branches:
      - master

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if galaxy.yml has been modified
        run: |
          # Get a list of all modified files in this PR
          FILES_CHANGED=$(git diff --name-only HEAD^ HEAD)
          echo "Files changed: $FILES_CHANGED"

          # Check if galaxy.yml is in the list of changed files
          if [[ $FILES_CHANGED != *"galaxy.yml"* ]]; then
            echo "Error: galaxy.yml has not been modified."
            exit 1
          fi

  upgrade:
    name: upgrade
    runs-on: libvirt
    needs: version
    strategy:
      matrix:
        include:
          - scenario: install
            image: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img
            base:
              rke: "v1.4.11"
              k8s: "v1.24.17-rancher1-1"
              docker: "20.10.24"
            target:
              rke: "v1.4.12"
              k8s: "v1.24.17-rancher1-1"
              docker: "20.10.24"
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v4

      - name: Set up python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Update ubuntu repositories
        run: sudo apt-get update

      - name: Install make
        run: sudo apt-get install -y make

      - name: Install dependencies
        run: make install

      - name: Debug test environment
        run: make debug

      - name: Install role requirements
        run: make requirements

      - name: Converge with base version
        run: make create prepare converge side-effect
        env:
          MOLECULE_KVM_IMAGE: ${{ matrix.image }}
          MOLECULE_SCENARIO: ${{ matrix.scenario }}
          MOLECULE_OUTPUT_DIR: /tmp/logs
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          RKE_RELEASE_RKE: ${{ matrix.base.rke }}
          RKE_RELEASE_K8S: ${{ matrix.base.k8s }}
          RKE_RELEASE_DOCKER: ${{ matrix.base.docker }}

      - name: Converge with target version
        run: make converge side-effect verify
        env:
          MOLECULE_KVM_IMAGE: ${{ matrix.image }}
          MOLECULE_SCENARIO: ${{ matrix.scenario }}
          MOLECULE_OUTPUT_DIR: /tmp/logs
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          RKE_RELEASE_RKE: ${{ matrix.target.rke }}
          RKE_RELEASE_K8S: ${{ matrix.target.k8s }}
          RKE_RELEASE_DOCKER: ${{ matrix.target.docker }}

      - name: Archive install logs
        run: make cleanup
        env:
          MOLECULE_KVM_IMAGE: ${{ matrix.image }}
          MOLECULE_SCENARIO: ${{ matrix.scenario }}
          MOLECULE_OUTPUT_DIR: /tmp/logs
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          RKE_RELEASE_RKE: ${{ matrix.target.rke }}
          RKE_RELEASE_K8S: ${{ matrix.target.k8s }}
          RKE_RELEASE_DOCKER: ${{ matrix.target.docker }}
        if: always()

      - name: Upload install logs
        uses: actions/upload-artifact@v4
        with:
          name: install-logs
          path: |
            /tmp/logs/*
          if-no-files-found: ignore
        if: always()

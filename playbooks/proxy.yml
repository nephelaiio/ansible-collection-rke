---
- name: Configure Docker daemon to use proxy cache
  hosts: "{{ rke_control_group }}:{{ rke_worker_group }}"
  vars_files:
    - main.yml
  vars:
    docker_daemon_config_path: "/etc/docker/daemon.json"
    docker_service_name: "docker.service"
  tasks:
    - name: Set environment facts
      ansible.builtin.set_fact:
        _rke_registry_deploy: "{{ rke_registry_deploy | default(false) }}"
        _rke_registry_proxy: "{{ _registry_proxy }}"
        _rke_docker_proxy: "{{ rke_docker_proxy | default(_registry_proxy) }}"
      vars:
        _registry_proxy: "http://localhost:{{ _rke_registry_port }}"

    - name: End play if proxy configuration is disabled
      ansible.builtin.meta: end_play
      when: not (_rke_registry_deploy | bool) and (_rke_docker_proxy == _rke_registry_proxy)

    - name: Verify configuration parameters
      ansible.builtin.assert:
        that: not ((_rke_registry_deploy | bool) and (_rke_docker_proxy != _rke_registry_proxy))
        fail_msg: "Parameter rke_docker_proxy must be set to registry url if rke_registry_deploy is set"

    - name: Check if daemon.json exists
      ansible.builtin.stat:
        path: "{{ docker_daemon_config_path }}"
      register: docker_daemon_stat
      become: true

    - name: Read existing daemon.json if it exists
      ansible.builtin.slurp:
        src: "{{ docker_daemon_config_path }}"
      register: docker_daemon_content
      become: true
      when: docker_daemon_stat.stat.exists

    - name: Parse existing daemon.json or create empty config
      ansible.builtin.set_fact:
        docker_daemon_config: "{{ (docker_daemon_content.content | b64decode | from_json) if docker_daemon_stat.stat.exists else {} }}"

    - name: Update Docker daemon configuration with registry mirror
      ansible.builtin.set_fact:
        docker_daemon_config: "{{ docker_daemon_config | combine(docker_config_override) }}"
      vars:
        docker_config_override:
          registry-mirrors:
            - "{{ _rke_docker_proxy }}"
          insecure-registries:
            - "{{ _rke_docker_proxy | urlsplit('hostname') }}"

    - name: Ensure /etc/docker directory exists
      ansible.builtin.file:
        path: /etc/docker
        state: directory
        mode: "0755"
      become: true

    - name: Write updated Docker daemon configuration
      ansible.builtin.copy:
        content: "{{ docker_daemon_config | to_nice_json }}"
        dest: "{{ docker_daemon_config_path }}"
        mode: "0644"
      become: true

    - name: Reload Docker configuration
      ansible.builtin.systemd:
        name: "{{ docker_service_name }}"
        state: reloaded
      become: true

    - name: Verify Docker can pull from registry proxy
      ansible.builtin.command: "docker pull hello-world:latest"
      become: true
      register: test_pull
      changed_when: false
      ignore_errors: true

    - name: Display test pull result
      ansible.builtin.debug:
        var: test_pull.stdout_lines
      when: test_pull is not failed

    - name: Display pull error if any
      ansible.builtin.debug:
        var: test_pull.stderr_lines
      when: test_pull is failed
